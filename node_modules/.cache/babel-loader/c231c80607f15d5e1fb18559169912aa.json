{"ast":null,"code":"class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n  }\n\n  async getResource(url) {\n    const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n    if (!res.ok) {\n      throw new Error(\"Its impossible, because we have received \" + \"\".concat(res.status));\n    }\n\n    const body = await res.json();\n    return body;\n  }\n\n  async getAllPeople() {\n    const res = await this.getResource(\"/people/\");\n    return res.results;\n  }\n\n  getPerson(id) {\n    return this.getResource(\"/people/\".concat(id, \"/\"));\n  }\n\n}\n\nconst swapi = new SwapiService();\nswapi.getAllPeople().then(people => {\n  people.forEach(p => {\n    console.log(p.name);\n  });\n});","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/Starwars/stars/src/index.js"],"names":["SwapiService","_apiBase","getResource","url","res","fetch","ok","Error","status","body","json","getAllPeople","results","getPerson","id","swapi","then","people","forEach","p","console","log","name"],"mappings":"AAAA,MAAMA,YAAN,CAAmB;AAAA;AAAA,SAEfC,QAFe,GAEJ,sBAFI;AAAA;;AAIf,QAAMC,WAAN,CAAkBC,GAAlB,EAAuB;AACnB,UAAMC,GAAG,GAAG,MAAMC,KAAK,WAAI,KAAKJ,QAAT,SAAoBE,GAApB,EAAvB;;AAEA,QAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,YAAM,IAAIC,KAAJ,CAAU,wDAAiDH,GAAG,CAACI,MAArD,CAAV,CAAN;AACH;;AAED,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACH;;AAED,QAAME,YAAN,GAAqB;AACjB,UAAMP,GAAG,GAAG,MAAM,KAAKF,WAAL,YAAlB;AACA,WAAOE,GAAG,CAACQ,OAAX;AACH;;AAEDC,EAAAA,SAAS,CAACC,EAAD,EAAK;AACV,WAAO,KAAKZ,WAAL,mBAA4BY,EAA5B,OAAP;AACH;;AAtBc;;AA0BnB,MAAMC,KAAK,GAAG,IAAIf,YAAJ,EAAd;AAEAe,KAAK,CAACJ,YAAN,GAAqBK,IAArB,CAA2BC,MAAD,IAAY;AAClCA,EAAAA,MAAM,CAACC,OAAP,CAAgBC,CAAD,IAAO;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,IAAd;AACH,GAFD;AAGH,CAJD","sourcesContent":["class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Its impossible, because we have received ` + `${res.status}`)\n        }\n    \n        const body = await res.json();\n        return body;    \n    }\n\n    async getAllPeople() {\n        const res = await this.getResource(`/people/`);\n        return res.results;\n    }\n\n    getPerson(id) {\n        return this.getResource(`/people/${id}/`)\n    }\n\n}\n\nconst swapi = new SwapiService();\n\nswapi.getAllPeople().then((people) => {\n    people.forEach((p) => {\n        console.log(p.name)\n    })\n})\n\n\n\n"]},"metadata":{},"sourceType":"module"}