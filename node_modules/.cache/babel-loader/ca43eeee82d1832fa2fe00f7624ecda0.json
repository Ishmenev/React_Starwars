{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n\n    this.getResource = async url => {\n      const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n      if (!res.ok) {\n        throw new Error(\"Could not fetch \".concat(url) + \", received \".concat(res.status));\n      }\n\n      return await res.json();\n    };\n\n    this.getAllPeople = async () => {\n      const res = await this.getResource(\"/people/\");\n      return res.results.map(this._transformPerson);\n    };\n\n    this.getPerson = async id => {\n      const person = await this.getResource(\"/people/\".concat(id, \"/\"));\n      return this._transformPerson(person);\n    };\n\n    this.getAllPlanets = async () => {\n      const res = await this.getResource(\"/planets/\");\n      return res.results.map(this._transformPlanet);\n    };\n\n    this.getPlanet = async id => {\n      const planet = await this.getResource(\"/planets/\".concat(id, \"/\"));\n      return this._transformPlanet(planet);\n    };\n\n    this.getAllStarships = async () => {\n      const res = await this.getResource(\"/starships/\");\n      return res.results.map(this._transformStarship);\n    };\n\n    this.getStarship = async id => {\n      const starship = this.getResource(\"/starships/\".concat(id, \"/\"));\n      return this._transformStarship(starship);\n    };\n\n    this._extractId = item => {\n      const idRegExp = /\\/([0-9]*)\\/$/;\n      return item.url.match(idRegExp)[1];\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.cost_in_credits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargo_capacity\n      };\n    };\n\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birth_year,\n        eyeColor: person.eye_color\n      };\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/Starwars/stars/src/services/swapi-service.js"],"names":["SwapiService","_apiBase","getResource","url","res","fetch","ok","Error","status","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","_extractId","item","idRegExp","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","gender","birthYear","birth_year","eyeColor","eye_color"],"mappings":"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","sourcesContent":["export default class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n  \n    getResource = async (url) => {\n      const res = await fetch(`${this._apiBase}${url}`);\n  \n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}` +\n          `, received ${res.status}`)\n      }\n      return await res.json();\n    };\n  \n    getAllPeople = async () => {\n      const res = await this.getResource(`/people/`);\n      return res.results.map(this._transformPerson);\n    };\n  \n    getPerson = async (id) => {\n      const person = await this.getResource(`/people/${id}/`);\n      return this._transformPerson(person);\n    };\n  \n    getAllPlanets = async () => {\n      const res = await this.getResource(`/planets/`);\n      return res.results.map(this._transformPlanet);\n    };\n  \n    getPlanet = async (id) => {\n      const planet = await this.getResource(`/planets/${id}/`);\n      return this._transformPlanet(planet);\n    };\n  \n    getAllStarships = async () => {\n      const res = await this.getResource(`/starships/`);\n      return res.results.map(this._transformStarship);\n    };\n  \n    getStarship = async (id) => {\n      const starship = this.getResource(`/starships/${id}/`);\n      return this._transformStarship(starship);\n    };\n  \n    _extractId = (item) => {\n      const idRegExp = /\\/([0-9]*)\\/$/;\n      return item.url.match(idRegExp)[1];\n    };\n  \n    _transformPlanet = (planet) => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n  \n    _transformStarship = (starship) => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.cost_in_credits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargo_capacity\n      }\n    };\n  \n    _transformPerson = (person) => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birth_year,\n        eyeColor: person.eye_color\n      }\n    }\n  }\n  "]},"metadata":{},"sourceType":"module"}