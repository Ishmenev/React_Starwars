{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n\n    this.getResource = async url => {\n      const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n      if (!res.ok) {\n        throw new Error(\"Its impossible, because we have received Error\");\n      }\n\n      return await res.json();\n    };\n\n    this.getAllPeople = async () => {\n      const res = await this.getResource(\"/people/\");\n      return res.results.map(this._transformPerson);\n    };\n\n    this.getPerson = async id => {\n      const person = await this.getResource(\"/people/\".concat(id, \"/\"));\n      return this._transformPerson(person);\n    };\n\n    this.getAllPlanets = async () => {\n      const res = await this.getResource(\"/planets/\");\n      return res.results.map(this._transformPlanet);\n    };\n\n    this.getPlanet = async id => {\n      const planet = await this.getResource(\"/planets/\".concat(id, \"/\"));\n      return this._transformPlanet(planet);\n    };\n\n    this.getAllStarships = async () => {\n      const res = await this.getResource(\"/starships/\");\n      return res.results.map(this._transformStarship);\n    };\n\n    this.getStarship = async id => {\n      const starship = this.getResource(\"/starships/\".concat(id, \"/\"));\n      return this._transformStarship(starship);\n    };\n\n    this._extractId = item => {\n      const idRegExp = /\\/([0-9]*)\\/$/;\n      return item.url.match(idRegExp)[1];\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.costInCredits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargoCapacity\n      };\n    };\n\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birthYear,\n        eyeColor: person.eyeColor\n      };\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/Starwars/stars/src/services/swapi-service.js"],"names":["SwapiService","_apiBase","getResource","url","res","fetch","ok","Error","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","_extractId","item","idRegExp","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","eyeColor"],"mappings":"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","sourcesContent":["export default class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Its impossible, because we have received Error`)\n        }\n    \n        return await res.json();\n    }\n\n    getAllPeople = async () => {\n    const res = await this.getResource(`/people/`);\n        return res.results.map(this._transformPerson);\n    }\n\n    getPerson = async (id) => {\n    const person = await this.getResource(`/people/${id}/`);\n        return this._transformPerson(person);\n    }\n\n    getAllPlanets = async () => {\n    const res = await this.getResource(`/planets/`);\n        return res.results.map(this._transformPlanet);\n    }\n\n    getPlanet = async (id) => {\n    const planet = await this.getResource(`/planets/${id}/`);\n        return this._transformPlanet(planet);\n    }\n\n    getAllStarships = async () => {\n    const res = await this.getResource(`/starships/`);\n        return res.results.map(this._transformStarship);\n    }\n\n    getStarship = async (id) => {\n    const starship = this.getResource(`/starships/${id}/`);\n        return this._transformStarship(starship);\n    }\n\n    _extractId = (item) => {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n        return item.url.match(idRegExp)[1];\n    }\n\n    _transformPlanet = (planet) => {\n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        };\n    }\n\n    _transformStarship = (starship) => {\n        return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.costInCredits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargoCapacity\n        }\n    }\n\n    _transformPerson = (person) => {\n        return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birthYear,\n            eyeColor: person.eyeColor\n        }\n    }\n        \n}\n"]},"metadata":{},"sourceType":"module"}