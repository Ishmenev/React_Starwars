{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/Starwars/stars/src/components/item-details/item-details.js\";\nimport React, { Component } from 'react';\nimport ErrorButton from '../error-button/error-button';\nimport './item-details.css';\n\nconst Record = ({\n  item,\n  field,\n  label\n}) => {\n  return React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, label), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, item[field]));\n};\n\nexport { Record };\nexport default class ItemDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      item: null,\n      image: null\n    };\n  }\n\n  componentDidMount() {\n    this.updateItem();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    const _this$props = this.props,\n          itemId = _this$props.itemId,\n          getData = _this$props.getData,\n          getImageUrl = _this$props.getImageUrl;\n\n    if (!itemId) {\n      return;\n    }\n\n    getData(itemId).then(item => {\n      this.setState({\n        item,\n        image: getImageUrl(item)\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          item = _this$state.item,\n          image = _this$state.image;\n\n    if (!item) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Select a item from a list\");\n    }\n\n    const name = item.name;\n    return React.createElement(\"div\", {\n      className: \"item-details card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"item-image\",\n      src: image,\n      alt: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, name), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.Children.map(this.props.children, child => {\n      return React.cloneElement(child, {\n        item\n      });\n    })), React.createElement(ErrorButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/Starwars/stars/src/components/item-details/item-details.js"],"names":["React","Component","ErrorButton","Record","item","field","label","ItemDetails","state","image","componentDidMount","updateItem","componentDidUpdate","prevProps","props","itemId","getData","getImageUrl","then","setState","render","name","Children","map","children","child","cloneElement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,oBAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA4B;AACzC,SACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,IAAI,CAACC,KAAD,CAAZ,CAFF,CADF;AAMD,CAPD;;AASA,SACEF,MADF;AAIA,eAAe,MAAMI,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEjDO,KAFiD,GAEzC;AACNJ,MAAAA,IAAI,EAAE,IADA;AAENK,MAAAA,KAAK,EAAE;AAFD,KAFyC;AAAA;;AAOjDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKC,KAAL,CAAWC,MAAX,KAAsBF,SAAS,CAACE,MAApC,EAA4C;AAC1C,WAAKJ,UAAL;AACD;AACF;;AAEDA,EAAAA,UAAU,GAAG;AAAA,wBAC8B,KAAKG,KADnC;AAAA,UACHC,MADG,eACHA,MADG;AAAA,UACKC,OADL,eACKA,OADL;AAAA,UACcC,WADd,eACcA,WADd;;AAEX,QAAI,CAACF,MAAL,EAAa;AACX;AACD;;AAEDC,IAAAA,OAAO,CAACD,MAAD,CAAP,CACGG,IADH,CACSd,IAAD,IAAU;AACd,WAAKe,QAAL,CAAc;AACZf,QAAAA,IADY;AAEZK,QAAAA,KAAK,EAAEQ,WAAW,CAACb,IAAD;AAFN,OAAd;AAID,KANH;AAOD;;AAEDgB,EAAAA,MAAM,GAAG;AAAA,wBAEiB,KAAKZ,KAFtB;AAAA,UAECJ,IAFD,eAECA,IAFD;AAAA,UAEOK,KAFP,eAEOA,KAFP;;AAGP,QAAI,CAACL,IAAL,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AACD;;AALM,UAOCiB,IAPD,GAOUjB,IAPV,CAOCiB,IAPD;AASP,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AACE,MAAA,GAAG,EAAEZ,KADP;AAEE,MAAA,GAAG,EAAC,MAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKY,IAAL,CADF,EAEE;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIrB,KAAK,CAACsB,QAAN,CAAeC,GAAf,CAAmB,KAAKT,KAAL,CAAWU,QAA9B,EAAyCC,KAAD,IAAW;AACjD,aAAOzB,KAAK,CAAC0B,YAAN,CAAmBD,KAAnB,EAA0B;AAAErB,QAAAA;AAAF,OAA1B,CAAP;AACD,KAFD,CAFJ,CAFF,EASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CALF,CADF;AAmBD;;AA5DgD","sourcesContent":["import React, { Component } from 'react';\n\nimport ErrorButton from '../error-button/error-button';\n\nimport './item-details.css';\n\nconst Record = ({ item, field, label }) => {\n  return (\n    <li className=\"list-group-item\">\n      <span className=\"term\">{label}</span>\n      <span>{ item[field] }</span>\n    </li>\n  );\n};\n\nexport {\n  Record\n};\n\nexport default class ItemDetails extends Component {\n\n  state = {\n    item: null,\n    image: null\n  };\n\n  componentDidMount() {\n    this.updateItem();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    const { itemId, getData, getImageUrl } = this.props;\n    if (!itemId) {\n      return;\n    }\n\n    getData(itemId)\n      .then((item) => {\n        this.setState({\n          item,\n          image: getImageUrl(item)\n        });\n      });\n  }\n\n  render() {\n\n    const { item, image } = this.state;\n    if (!item) {\n      return <span>Select a item from a list</span>;\n    }\n\n    const { name } = item;\n\n    return (\n      <div className=\"item-details card\">\n        <img className=\"item-image\"\n          src={image}\n          alt=\"item\"/>\n\n        <div className=\"card-body\">\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n            {\n              React.Children.map(this.props.children, (child) => {\n                return React.cloneElement(child, { item });\n              })\n            }\n          </ul>\n          <ErrorButton />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}