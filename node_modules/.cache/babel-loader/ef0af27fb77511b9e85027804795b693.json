{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/Starwars/stars/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport ErrorBoundry from '../error-boundry';\nimport ItemDetails, { Record } from \"../item-details/item-details\";\nimport SwapiService from \"../../services/swapi-service\";\nimport { PersonDetails, PlanetDetails, StarshipDetails, PersonList, PlanetList, StarshipList } from '../sw-components';\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.swapiService = new SwapiService();\n    this.state = {\n      showRandomPlanet: true\n    };\n\n    this.toggleRandomPlanet = () => {\n      this.setState(state => {\n        return {\n          showRandomPlanet: !state.showRandomPlanet\n        };\n      });\n    };\n  }\n\n  render() {\n    const planet = this.state.showRandomPlanet ? React.createElement(RandomPlanet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : null;\n    const _this$swapiService = this.swapiService,\n          getPerson = _this$swapiService.getPerson,\n          getStarship = _this$swapiService.getStarship,\n          getPersonImage = _this$swapiService.getPersonImage,\n          getStarshipImage = _this$swapiService.getStarshipImage,\n          getAllPeople = _this$swapiService.getAllPeople,\n          getAllPlanets = _this$swapiService.getAllPlanets;\n    const personDetails = React.createElement(ItemDetails, {\n      itemId: 11,\n      getData: getPerson,\n      getImageUrl: getPersonImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Record, {\n      field: \"gender\",\n      label: \"Gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"eyeColor\",\n      label: \"Eye Color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n    const starshipDetails = React.createElement(ItemDetails, {\n      itemId: 5,\n      getData: getStarship,\n      getImageUrl: getStarshipImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Record, {\n      field: \"model\",\n      label: \"Model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"length\",\n      label: \"Length\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"costInCredits\",\n      label: \"Cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n    return React.createElement(ErrorBoundry, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container stardb-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(RandomPlanet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(PersonList, {\n      getData: getAllPeople,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, ({\n      name\n    }) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, name)), React.createElement(PersonList, {\n      getData: getAllPlanets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, ({\n      name\n    }) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, name))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/Starwars/stars/src/components/app/app.js"],"names":["React","Component","Header","RandomPlanet","ErrorBoundry","ItemDetails","Record","SwapiService","PersonDetails","PlanetDetails","StarshipDetails","PersonList","PlanetList","StarshipList","App","swapiService","state","showRandomPlanet","toggleRandomPlanet","setState","render","planet","getPerson","getStarship","getPersonImage","getStarshipImage","getAllPeople","getAllPlanets","personDetails","starshipDetails","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport ErrorBoundry from '../error-boundry';\n\nimport ItemDetails, { Record } from \"../item-details/item-details\";\nimport SwapiService from \"../../services/swapi-service\";\n\nimport {\n  PersonDetails,\n  PlanetDetails,\n  StarshipDetails,\n  PersonList,\n  PlanetList,\n  StarshipList\n} from '../sw-components';\n\nimport './app.css';\n\nexport default class App extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    showRandomPlanet: true\n  };\n\n  toggleRandomPlanet = () => {\n    this.setState((state) => {\n      return {\n        showRandomPlanet: !state.showRandomPlanet\n      }\n    });\n  };\n\n  render() {\n\n    const planet = this.state.showRandomPlanet ?\n      <RandomPlanet/> :\n      null;\n\n    const { getPerson,\n            getStarship,\n            getPersonImage,\n            getStarshipImage,\n            getAllPeople,\n            getAllPlanets } = this.swapiService;\n\n    const personDetails = (\n      <ItemDetails\n        itemId={11}\n        getData={getPerson}\n        getImageUrl={getPersonImage} >\n\n        <Record field=\"gender\" label=\"Gender\" />\n        <Record field=\"eyeColor\" label=\"Eye Color\" />\n\n      </ItemDetails>\n    );\n\n    const starshipDetails = (\n      <ItemDetails\n        itemId={5}\n        getData={getStarship}\n        getImageUrl={getStarshipImage}>\n\n        <Record field=\"model\" label=\"Model\" />\n        <Record field=\"length\" label=\"Length\" />\n        <Record field=\"costInCredits\" label=\"Cost\" />\n      </ItemDetails>\n    );\n\n    return (\n      <ErrorBoundry>\n        <div className=\"container stardb-app\">\n          <Header />\n          <RandomPlanet />\n\n          <PersonList getData={getAllPeople}>\n            {({name}) => <span>{name}</span>}\n          </PersonList>\n          <PersonList getData={getAllPlanets}>\n            {({name}) => <span>{name}</span>}\n          </PersonList>\n\n\n\n\n        </div>\n      </ErrorBoundry>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}