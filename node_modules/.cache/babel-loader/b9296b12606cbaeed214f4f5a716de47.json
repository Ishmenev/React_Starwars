{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/Starwars/stars/src/components/random-planet/random-planet.js\";\nimport React, { Component } from 'react';\nimport SwapiService from '../../services/swapi-service';\nimport Spinner from '../spinner/spinner';\nimport ErrorIndicator from '../error-indicator/error-indicator';\nimport './random-planet.css';\nexport default class RandomPlanet extends Component {\n  constructor(...args) {\n    super(...args);\n    this.swapiService = new SwapiService();\n    this.state = {\n      planet: {},\n      loading: true\n    };\n\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet,\n        loading: false,\n        error: false\n      });\n    };\n\n    this.onError = err => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    this.updatePlanet = () => {\n      const id = Math.floor(Math.random() * 25) + 3;\n      this.swapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\n    };\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n  }\n\n  componentWillUnmount() {\n    setInterval(this.updatePlanet, 2000);\n  }\n\n  render() {\n    const _this$state = this.state,\n          planet = _this$state.planet,\n          loading = _this$state.loading,\n          error = _this$state.error;\n    const hasData = !(loading || error);\n    const errorMessage = error ? React.createElement(ErrorIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }) : null;\n    const spinner = loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : null;\n    const content = hasData ? React.createElement(PlanetView, {\n      planet: planet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }) : null;\n    return React.createElement(\"div\", {\n      className: \"random-planet jumbotron rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, errorMessage, spinner, content);\n  }\n\n}\n\nconst PlanetView = ({\n  planet\n}) => {\n  const name = planet.name,\n        population = planet.population,\n        rotationPeriod = planet.rotationPeriod,\n        diameter = planet.diameter,\n        id = planet.id;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"planet-image\",\n    src: \"https://starwars-visualguide.com/assets/img/planets/\".concat(id, \".jpg\"),\n    alt: \"planet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, name), React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Population\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, population)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Rotation period\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, rotationPeriod)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Diameter\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, diameter)))));\n};","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/Starwars/stars/src/components/random-planet/random-planet.js"],"names":["React","Component","SwapiService","Spinner","ErrorIndicator","RandomPlanet","swapiService","state","planet","loading","onPlanetLoaded","setState","error","onError","err","updatePlanet","id","Math","floor","random","getPlanet","then","catch","componentDidMount","componentWillUnmount","setInterval","render","hasData","errorMessage","spinner","content","PlanetView","name","population","rotationPeriod","diameter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport SwapiService from '../../services/swapi-service';\nimport Spinner from '../spinner/spinner';\nimport ErrorIndicator from '../error-indicator/error-indicator';\nimport './random-planet.css';\n\nexport default class RandomPlanet extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    planet: {},\n    loading: true\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n  }\n\n  componentWillUnmount() {\n    setInterval(this.updatePlanet, 2000);\n  }\n\n  onPlanetLoaded = (planet) => {\n    this.setState({\n      planet,\n      loading: false,\n      error: false\n    })\n  }\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    })\n  };\n\n  updatePlanet = () => {\n    const id = Math.floor(Math.random()*25) + 3;\n    this.swapiService\n      .getPlanet(id)\n      .then(this.onPlanetLoaded)\n      .catch(this.onError);\n  }\n\n  render() {\n    const {planet, loading, error} = this.state;\n\n    const hasData = !(loading || error);\n    \n    const errorMessage = error ? <ErrorIndicator /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = hasData ? <PlanetView planet={planet}/> : null;\n\n    return (\n      \n      <div className=\"random-planet jumbotron rounded\">\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst PlanetView = ({planet}) => {\n  const {name, population, rotationPeriod, diameter, id} = planet;\n\n  return (\n    <React.Fragment>\n      <img className=\"planet-image\"\n          src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n          alt=\"planet\" />\n      <div>\n        <h4>{name}</h4>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            <span className=\"term\">Population</span>\n            <span>{population}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Rotation period</span>\n            <span>{rotationPeriod}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Diameter</span>\n            <span>{diameter}</span>\n          </li>\n        </ul>\n      </div>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}