{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/Starwars/stars/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport ErrorBoundry from '../error-boundry';\nimport Row from \"../row/row\";\nimport ItemDetails, { Record } from \"../item-details/item-details\";\nimport SwapiService from \"../../services/swapi-service\";\nimport ItemList from '../item-list';\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.swapiService = new SwapiService();\n  }\n\n  render() {\n    const _this$swapiService = this.swapiService,\n          getPerson = _this$swapiService.getPerson,\n          getStarship = _this$swapiService.getStarship,\n          getPersonImage = _this$swapiService.getPersonImage,\n          getStarshipImage = _this$swapiService.getStarshipImage,\n          getAllPeople = _this$swapiService.getAllPeople,\n          getAllPlanets = _this$swapiService.getAllPlanets;\n    const personDetails = React.createElement(ItemDetails, {\n      itemId: 11,\n      getData: getPerson,\n      getImageUrl: getPersonImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Record, {\n      field: \"gender\",\n      label: \"Gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"eyeColor\",\n      label: \"Eye Color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n    const starshipDetails = React.createElement(ItemDetails, {\n      itemId: 5,\n      getData: getStarship,\n      getImageUrl: getStarshipImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Record, {\n      field: \"model\",\n      label: \"Model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"length\",\n      label: \"Length\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Record, {\n      field: \"costInCredits\",\n      label: \"Cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n    return React.createElement(ErrorBoundry, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stardb-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(ItemList, {\n      getData: getAllPeople,\n      onItemSelected: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, ({\n      name\n    }) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, name)), React.createElement(ItemList, {\n      getData: getAllPlanets,\n      onItemSelected: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, ({\n      name\n    }) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, name))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/Starwars/stars/src/components/app/app.js"],"names":["React","Component","Header","RandomPlanet","ErrorBoundry","Row","ItemDetails","Record","SwapiService","ItemList","App","swapiService","render","getPerson","getStarship","getPersonImage","getStarshipImage","getAllPeople","getAllPlanets","personDetails","starshipDetails","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,WAAP,IAAsBC,MAAtB,QAAoC,8BAApC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAOC,QAAP,MAAqB,cAArB;AAEA,OAAO,WAAP;AAEA,eAAe,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEzCU,YAFyC,GAE1B,IAAIH,YAAJ,EAF0B;AAAA;;AAMzCI,EAAAA,MAAM,GAAG;AAAA,+BAOmB,KAAKD,YAPxB;AAAA,UAECE,SAFD,sBAECA,SAFD;AAAA,UAGCC,WAHD,sBAGCA,WAHD;AAAA,UAICC,cAJD,sBAICA,cAJD;AAAA,UAKCC,gBALD,sBAKCA,gBALD;AAAA,UAMCC,YAND,sBAMCA,YAND;AAAA,UAOCC,aAPD,sBAOCA,aAPD;AASP,UAAMC,aAAa,GACjB,oBAAC,WAAD;AACE,MAAA,MAAM,EAAE,EADV;AAEE,MAAA,OAAO,EAAEN,SAFX;AAGE,MAAA,WAAW,EAAEE,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,KAAK,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAYA,UAAMK,eAAe,GACnB,oBAAC,WAAD;AACE,MAAA,MAAM,EAAE,CADV;AAEE,MAAA,OAAO,EAAEN,WAFX;AAGE,MAAA,WAAW,EAAEE,gBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA8B,MAAA,KAAK,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAYA,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEC,YADX;AAEE,MAAA,cAAc,EAAE,MAAM,CAAE,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,CAAC;AAACI,MAAAA;AAAD,KAAD,KAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,IAAP,CAJhB,CAHF,EAUE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEH,aADX;AAEE,MAAA,cAAc,EAAE,MAAM,CAAE,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,CAAC;AAACG,MAAAA;AAAD,KAAD,KAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,IAAP,CAJhB,CAVF,CADF,CADF;AAsBD;;AA7DwC","sourcesContent":["import React, { Component } from 'react';\n\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport ErrorBoundry from '../error-boundry';\n\nimport Row from \"../row/row\";\nimport ItemDetails, { Record } from \"../item-details/item-details\";\nimport SwapiService from \"../../services/swapi-service\";\n\nimport ItemList from '../item-list';\n\nimport './app.css';\n\nexport default class App extends Component {\n\n  swapiService = new SwapiService();\n\n\n\n  render() {\n\n    const { getPerson,\n            getStarship,\n            getPersonImage,\n            getStarshipImage,\n            getAllPeople,\n            getAllPlanets } = this.swapiService;\n\n    const personDetails = (\n      <ItemDetails\n        itemId={11}\n        getData={getPerson}\n        getImageUrl={getPersonImage} >\n\n        <Record field=\"gender\" label=\"Gender\" />\n        <Record field=\"eyeColor\" label=\"Eye Color\" />\n\n      </ItemDetails>\n    );\n\n    const starshipDetails = (\n      <ItemDetails\n        itemId={5}\n        getData={getStarship}\n        getImageUrl={getStarshipImage}>\n\n        <Record field=\"model\" label=\"Model\" />\n        <Record field=\"length\" label=\"Length\" />\n        <Record field=\"costInCredits\" label=\"Cost\" />\n      </ItemDetails>\n    );\n\n    return (\n      <ErrorBoundry>\n        <div className=\"stardb-app\">\n          <Header />\n\n          <ItemList\n            getData={getAllPeople}\n            onItemSelected={() => {}}>\n\n            { ({name}) => <span>{name}</span> }\n          </ItemList>\n\n          <ItemList\n            getData={getAllPlanets}\n            onItemSelected={() => {}}>\n\n            { ({name}) => <span>{name}</span> }\n          </ItemList>\n\n        </div>\n      </ErrorBoundry>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}