{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/Starwars/stars/src/components/random-planet/random-planet.js\";\nimport React, { Component } from 'react';\nimport SwapiService from '../../services/swapi-service';\nimport Spinner from '../spinner/spinner';\nimport './random-planet.css';\nexport default class RandomPlanet extends Component {\n  constructor() {\n    super();\n    this.swapiService = new SwapiService();\n    this.state = {\n      planet: {},\n      loading: true\n    };\n\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet,\n        loading: false\n      });\n    };\n\n    this.updatePlanet();\n  }\n\n  updatePlanet() {\n    const id = 12;\n    this.swapiService.getPlanet(id).then(this.onPlanetLoaded);\n  }\n\n  render() {\n    const _this$state = this.state,\n          _this$state$planet = _this$state.planet,\n          name = _this$state$planet.name,\n          population = _this$state$planet.population,\n          rotationPeriod = _this$state$planet.rotationPeriod,\n          diameter = _this$state$planet.diameter,\n          id = _this$state$planet.id,\n          loading = _this$state.loading;\n\n    if (loading) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"random-planet jumbotron rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"planet-image\",\n      src: \"https://starwars-visualguide.com/assets/img/planets/\".concat(id, \".jpg\"),\n      alt: \"planet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, name), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Population\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, population)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Rotation period\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, rotationPeriod)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Diameter\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, diameter)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/Starwars/stars/src/components/random-planet/random-planet.js"],"names":["React","Component","SwapiService","Spinner","RandomPlanet","constructor","swapiService","state","planet","loading","onPlanetLoaded","setState","updatePlanet","id","getPlanet","then","render","name","population","rotationPeriod","diameter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,qBAAP;AAEA,eAAe,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AASlDI,EAAAA,WAAW,GAAG;AACZ;AADY,SAPdC,YAOc,GAPC,IAAIJ,YAAJ,EAOD;AAAA,SALdK,KAKc,GALN;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAE;AAFH,KAKM;;AAAA,SAKdC,cALc,GAKIF,MAAD,IAAY;AAC3B,WAAKG,QAAL,CAAc;AACZH,QAAAA,MADY;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAVa;;AAEZ,SAAKG,YAAL;AACD;;AASDA,EAAAA,YAAY,GAAG;AACb,UAAMC,EAAE,GAAG,EAAX;AACA,SAAKP,YAAL,CACGQ,SADH,CACaD,EADb,EAEGE,IAFH,CAEQ,KAAKL,cAFb;AAGD;;AAEDM,EAAAA,MAAM,GAAG;AAAA,wBACqE,KAAKT,KAD1E;AAAA,2CACAC,MADA;AAAA,UACSS,IADT,sBACSA,IADT;AAAA,UACeC,UADf,sBACeA,UADf;AAAA,UAC2BC,cAD3B,sBAC2BA,cAD3B;AAAA,UAC2CC,QAD3C,sBAC2CA,QAD3C;AAAA,UACqDP,EADrD,sBACqDA,EADrD;AAAA,UAC0DJ,OAD1D,eAC0DA,OAD1D;;AAGP,QAAIA,OAAJ,EAAa;AACX,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WAEE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AACG,MAAA,GAAG,gEAAyDI,EAAzD,SADN;AAEG,MAAA,GAAG,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKI,IAAL,CADF,EAEE;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,UAAP,CAFF,CADF,EAKE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,cAAP,CAFF,CALF,EASE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,QAAP,CAFF,CATF,CAFF,CAJF,CAFF;AAyBD;;AA5DiD","sourcesContent":["import React, { Component } from 'react';\n\nimport SwapiService from '../../services/swapi-service';\nimport Spinner from '../spinner/spinner';\nimport './random-planet.css';\n\nexport default class RandomPlanet extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    planet: {},\n    loading: true\n  }\n\n  constructor() {\n    super();\n    this.updatePlanet();\n  }\n\n  onPlanetLoaded = (planet) => {\n    this.setState({\n      planet,\n      loading: false\n    })\n  }\n\n  updatePlanet() {\n    const id = 12;\n    this.swapiService\n      .getPlanet(id)\n      .then(this.onPlanetLoaded);\n  }\n\n  render() {\n    const {planet: {name, population, rotationPeriod, diameter, id}, loading} = this.state;\n\n    if (loading) {\n      return <Spinner />\n    }\n\n    return (\n      \n      <div className=\"random-planet jumbotron rounded\">\n        <img className=\"planet-image\"\n           src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n           alt=\"planet\" />\n        <div>\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <span className=\"term\">Population</span>\n              <span>{population}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Rotation period</span>\n              <span>{rotationPeriod}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Diameter</span>\n              <span>{diameter}</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}