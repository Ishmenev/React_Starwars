{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n\n    this.getAllPeople = async () => {\n      const res = await this.getResource(\"/people/\");\n      return res.results.map(this._transformPerson);\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.costInCredits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargoCapacity\n      };\n    };\n\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birthYear,\n        eyeColor: person.eyeColor\n      };\n    };\n  }\n\n  async getResource(url) {\n    const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n    if (!res.ok) {\n      throw new Error(\"Its impossible, because we have received Error\");\n    }\n\n    return await res.json();\n  }\n\n  async getPerson(id) {\n    const person = await this.getResource(\"/people/\".concat(id, \"/\"));\n    return this._transformPerson(person);\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResource(\"/planets/\");\n    return res.results.map(this._transformPlanet);\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResource(\"/planets/\".concat(id, \"/\"));\n    return this._transformPlanet(planet);\n  }\n\n  async getAllStarships() {\n    const res = await this.getResource(\"/starships/\");\n    return res.results.map(this._transformStarship);\n  }\n\n  async getStarship(id) {\n    const starship = this.getResource(\"/starships/\".concat(id, \"/\"));\n    return this._transformStarship(starship);\n  }\n\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/Starwars/stars/src/services/swapi-service.js"],"names":["SwapiService","_apiBase","getAllPeople","res","getResource","results","map","_transformPerson","_transformPlanet","planet","id","_extractId","name","population","rotationPeriod","rotation_period","diameter","_transformStarship","starship","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","person","gender","birthYear","eyeColor","url","fetch","ok","Error","json","getPerson","getAllPlanets","getPlanet","getAllStarships","getStarship","item","idRegExp","match"],"mappings":"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","sourcesContent":["export default class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Its impossible, because we have received Error`)\n        }\n    \n        return await res.json();\n    }\n\n    getAllPeople = async () => {\n    const res = await this.getResource(`/people/`);\n        return res.results.map(this._transformPerson);\n    }\n\n    async getPerson(id) {\n    const person = await this.getResource(`/people/${id}/`);\n        return this._transformPerson(person);\n    }\n\n    async getAllPlanets() {\n    const res = await this.getResource(`/planets/`);\n        return res.results.map(this._transformPlanet);\n    }\n\n    async getPlanet(id) {\n    const planet = await this.getResource(`/planets/${id}/`);\n        return this._transformPlanet(planet);\n    }\n\n    async getAllStarships() {\n    const res = await this.getResource(`/starships/`);\n        return res.results.map(this._transformStarship);\n    }\n\n    async getStarship(id) {\n    const starship = this.getResource(`/starships/${id}/`);\n        return this._transformStarship(starship);\n    }\n\n    _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n        return item.url.match(idRegExp)[1];\n    }\n\n    _transformPlanet = (planet) => {\n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        };\n    }\n\n    _transformStarship = (starship) => {\n        return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.costInCredits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargoCapacity\n        }\n    }\n\n    _transformPerson = (person) => {\n        return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birthYear,\n            eyeColor: person.eyeColor\n        }\n    }\n        \n}\n"]},"metadata":{},"sourceType":"module"}