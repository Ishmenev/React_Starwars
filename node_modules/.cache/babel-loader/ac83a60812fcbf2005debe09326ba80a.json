{"ast":null,"code":"var _jsxFileName = \"/Users/ishmenevev/Desktop/Starwars/stars/src/components/item-list/item-list.js\";\nimport React, { Component } from 'react';\nimport './item-list.css';\nimport Spinner from \"../spinner/spinner\";\nimport SwapiService from '../../services/swapi-service';\n\nconst ItemList = props => {\n  const data = props.data,\n        onItemSelected = props.onItemSelected,\n        renderLabel = props.children;\n  const items = data.map(item => {\n    const id = item.id;\n    const label = renderLabel(item);\n    return React.createElement(\"li\", {\n      className: \"list-group-item\",\n      key: id,\n      onClick: () => onItemSelected(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, label);\n  });\n  return React.createElement(\"ul\", {\n    className: \"item-list list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, items);\n};\n\nconst withData = (View, getData) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        itemList: null\n      };\n    }\n\n    componentDidMount() {\n      getData().then(data => {\n        this.setState({\n          data\n        });\n      });\n    }\n\n    render() {\n      const data = this.state.data;\n\n      if (!data) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(ItemList, Object.assign({}, this.props, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n\n  }, _temp;\n};\n\nconst _ref = new SwapiService(),\n      getAllPeople = _ref.getAllPeople;\n\nexport default withData(ItemList, getAllPeople);","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/Starwars/stars/src/components/item-list/item-list.js"],"names":["React","Component","Spinner","SwapiService","ItemList","props","data","onItemSelected","renderLabel","children","items","map","item","id","label","withData","View","getData","state","itemList","componentDidMount","then","setState","render","getAllPeople"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,iBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,QACnBC,IADmB,GAC4BD,KAD5B,CACnBC,IADmB;AAAA,QACbC,cADa,GAC4BF,KAD5B,CACbE,cADa;AAAA,QACaC,WADb,GAC4BH,KAD5B,CACGI,QADH;AAG1B,QAAMC,KAAK,GAAGJ,IAAI,CAACK,GAAL,CAAUC,IAAD,IAAU;AAAA,UACxBC,EADwB,GAClBD,IADkB,CACxBC,EADwB;AAE/B,UAAMC,KAAK,GAAGN,WAAW,CAACI,IAAD,CAAzB;AAEA,WACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AACI,MAAA,GAAG,EAAEC,EADT;AAEI,MAAA,OAAO,EAAE,MAAMN,cAAc,CAACM,EAAD,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGC,KAHH,CADF;AAOD,GAXa,CAAd;AAaA,SACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KADH,CADF;AAKD,CArBD;;AAuBA,MAAMK,QAAQ,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAAA;;AAClC,iBAAO,cAAchB,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC7BiB,KAD6B,GACrB;AACNC,QAAAA,QAAQ,EAAE;AADJ,OADqB;AAAA;;AAK7BC,IAAAA,iBAAiB,GAAG;AAClBH,MAAAA,OAAO,GACJI,IADH,CACSf,IAAD,IAAU;AACd,aAAKgB,QAAL,CAAc;AACZhB,UAAAA;AADY,SAAd;AAGD,OALH;AAMD;;AAEDiB,IAAAA,MAAM,GAAG;AAAA,YACCjB,IADD,GACU,KAAKY,KADf,CACCZ,IADD;;AAGP,UAAI,CAACA,IAAL,EAAW;AACT,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aAAO,oBAAC,QAAD,oBAAe,KAAKD,KAApB;AAA2B,QAAA,IAAI,EAAEC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AAtB4B,GAA/B;AAwBD,CAzBD;;aA2BuB,IAAIH,YAAJ,E;MAAhBqB,Y,QAAAA,Y;;AAEP,eAAeT,QAAQ,CAACX,QAAD,EAAWoB,YAAX,CAAvB","sourcesContent":["import React, { Component } from 'react';\n\nimport './item-list.css';\nimport Spinner from \"../spinner/spinner\";\nimport SwapiService from '../../services/swapi-service';\n\nconst ItemList = (props) => {\n  const {data, onItemSelected, children: renderLabel} = props;\n\n  const items = data.map((item) => {\n    const {id} = item;\n    const label = renderLabel(item);\n\n    return (\n      <li className=\"list-group-item\"\n          key={id}\n          onClick={() => onItemSelected(id)}>\n        {label}\n      </li>\n    );\n  })\n\n  return (\n    <ul className=\"item-list list-group\">\n      {items}\n    </ul>\n  )\n}\n\nconst withData = (View, getData) => {\n  return class extends Component {\n    state = {\n      itemList: null\n    };\n  \n    componentDidMount() {\n      getData()\n        .then((data) => {\n          this.setState({\n            data\n          });\n        });\n    }\n  \n    render() {\n      const { data } = this.state;\n\n      if (!data) {\n        return <Spinner />;\n      }\n  \n      return <ItemList  {...this.props} data={data} />\n    }\n  }\n};\n\nconst {getAllPeople} = new SwapiService();\n\nexport default withData(ItemList, getAllPeople);\n"]},"metadata":{},"sourceType":"module"}