{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n\n    this.getAllPeople = async () => {\n      const res = await this.getResource(\"/people/\");\n      return res.results.map(this._transformPerson);\n    };\n\n    this.getPerson = async id => {\n      const person = await this.getResource(\"/people/\".concat(id, \"/\"));\n      return this._transformPerson(person);\n    };\n\n    this.getAllPlanets = async () => {\n      const res = await this.getResource(\"/planets/\");\n      return res.results.map(this._transformPlanet);\n    };\n\n    this.getPlanet = async id => {\n      const planet = await this.getResource(\"/planets/\".concat(id, \"/\"));\n      return this._transformPlanet(planet);\n    };\n\n    this.getAllStarships = async () => {\n      const res = await this.getResource(\"/starships/\");\n      return res.results.map(this._transformStarship);\n    };\n\n    this.getStarship = async id => {\n      const starship = this.getResource(\"/starships/\".concat(id, \"/\"));\n      return this._transformStarship(starship);\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.costInCredits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargoCapacity\n      };\n    };\n\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birthYear,\n        eyeColor: person.eyeColor\n      };\n    };\n  }\n\n  async getResource(url) {\n    const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n    if (!res.ok) {\n      throw new Error(\"Its impossible, because we have received Error\");\n    }\n\n    return await res.json();\n  }\n\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n\n}","map":{"version":3,"sources":["/Users/ishmenevev/Desktop/Starwars/stars/src/services/swapi-service.js"],"names":["SwapiService","_apiBase","getAllPeople","res","getResource","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","_extractId","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","eyeColor","url","fetch","ok","Error","json","item","idRegExp","match"],"mappings":"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","sourcesContent":["export default class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Its impossible, because we have received Error`)\n        }\n    \n        return await res.json();\n    }\n\n    getAllPeople = async () => {\n    const res = await this.getResource(`/people/`);\n        return res.results.map(this._transformPerson);\n    }\n\n    getPerson = async (id) => {\n    const person = await this.getResource(`/people/${id}/`);\n        return this._transformPerson(person);\n    }\n\n    getAllPlanets = async () => {\n    const res = await this.getResource(`/planets/`);\n        return res.results.map(this._transformPlanet);\n    }\n\n    getPlanet = async (id) => {\n    const planet = await this.getResource(`/planets/${id}/`);\n        return this._transformPlanet(planet);\n    }\n\n    getAllStarships = async () => {\n    const res = await this.getResource(`/starships/`);\n        return res.results.map(this._transformStarship);\n    }\n\n    getStarship = async (id) => {\n    const starship = this.getResource(`/starships/${id}/`);\n        return this._transformStarship(starship);\n    }\n\n    _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n        return item.url.match(idRegExp)[1];\n    }\n\n    _transformPlanet = (planet) => {\n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        };\n    }\n\n    _transformStarship = (starship) => {\n        return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.costInCredits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargoCapacity\n        }\n    }\n\n    _transformPerson = (person) => {\n        return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birthYear,\n            eyeColor: person.eyeColor\n        }\n    }\n        \n}\n"]},"metadata":{},"sourceType":"module"}